<?xml version="1.0"?><feed xmlns="http://www.w3.org/2005/Atom"><title>Posts Tagged “GitHub” &ndash; Development, design, and more by David Ensinger</title><link href="http://davidensinger.com/"/><link type="application/atom+xml" rel="self" href="http://davidensinger.com/atom.xml"/><updated>2013-07-23T13:00:57-04:00</updated><id>http://davidensinger.com/</id><author><name>David Ensinger</name><email>hello@davidensinger.com</email></author><rights>Copyright &#169; 2013 David Ensinger. All rights reserved.</rights><entry><id>http://davidensinger.com/2013/04/deploying-jekyll-to-github-pages</id><link type="text/html" rel="alternate" href="http://davidensinger.com/2013/04/deploying-jekyll-to-github-pages/"/><title>Deploying Jekyll with Plugins to GitHub Pages</title><published>2013-04-08T06:30:00-04:00</published><updated>2013-04-08T06:30:00-04:00</updated><author><name>David Ensinger</name><uri>http://davidensinger.com/</uri></author><content type="html"><![CDATA[
    <p>&lt;p&gt;In spite of my resolution to design and develop this website simply, I’ve decided to run &lt;strong&gt;Jekyll&lt;/strong&gt; with plugins. This complicates my deployment because &lt;strong&gt;GitHub Pages&lt;/strong&gt; runs Jekyll in &lt;code&gt;&mdash;safe&lt;/code&gt; mode, which quite reasonably prevents the running of arbitrary Ruby code on the GitHub servers.&lt;/p&gt;</p>

<p>&lt;p&gt;To work around this limitation, the consensus amongst developers is to create two branches: one for development (that I’ve named &lt;em&gt;source&lt;/em&gt;) and the other solely for the compiled &lt;strong&gt;_site&lt;/strong&gt;. In the former branch I’ll add additionally functionality via custom plugins, while the latter branch will serve as the &lt;em&gt;master&lt;/em&gt; that GitHub uses to publish the site.&lt;/p&gt;</p>

<p>&lt;p&gt;I’ve chosen to follow these &lt;a href=&quot;https://github.com/rson/rson.github.com&quot;&gt;excellent deployment steps&lt;/a&gt; by &lt;a href=&quot;http://rsontech.net/&quot;&gt;Randy Morris&lt;/a&gt;, which I’ll list below with brief explanations as to what each command does.&lt;/p&gt;</p>

<p>&lt;p&gt;Delete &lt;em&gt;master&lt;/em&gt; branch:&lt;/p&gt;</p>

<p>&lt;pre&gt;&lt;code&gt;git branch -D master
&lt;/code&gt;&lt;/pre&gt;</p>

<p>&lt;p&gt;Check out a new &lt;em&gt;master&lt;/em&gt; branch:&lt;/p&gt;</p>

<p>&lt;pre&gt;&lt;code&gt;git checkout -b master
&lt;/code&gt;&lt;/pre&gt;</p>

<p>&lt;p&gt;Force the &lt;em&gt;_site/&lt;/em&gt; subdirectory to be project root:&lt;/p&gt;</p>

<p>&lt;pre&gt;&lt;code&gt;git filter-branch &mdash;subdirectory-filter _site/ -f
&lt;/code&gt;&lt;/pre&gt;</p>

<p>&lt;p&gt;Checkout the &lt;em&gt;source&lt;/em&gt; branch:&lt;/p&gt;</p>

<p>&lt;pre&gt;&lt;code&gt;git checkout source
&lt;/code&gt;&lt;/pre&gt;</p>

<p>&lt;p&gt;Push all branches to origin:&lt;/p&gt;</p>

<p>&lt;pre&gt;&lt;code&gt;git push &mdash;all origin
&lt;/code&gt;&lt;/pre&gt;</p>

<p>&lt;p&gt;Pretty simple, right? I’m glad that I’ll now be able to add categories and tags to my site, which is next on my todo list!&lt;/p&gt;</p>

<p>&lt;h2&gt;Next Steps&lt;/h2&gt;</p>

<p>&lt;p&gt;I’d like to automate this by including these deployment commands into a build script that concatenates, minifies, and (when applicable) optimizes my assets after Jekyll compiles the site. Still working on that, though!&lt;/p&gt;</p>

  ]]></content></entry><entry><id>http://davidensinger.com/2013/03/setting-the-dns-for-github-pages-on-namecheap</id><link type="text/html" rel="alternate" href="http://davidensinger.com/2013/03/setting-the-dns-for-github-pages-on-namecheap/"/><title>Setting the DNS for GitHub Pages on Namecheap</title><published>2013-03-27T16:05:00-04:00</published><updated>2013-03-27T16:05:00-04:00</updated><author><name>David Ensinger</name><uri>http://davidensinger.com/</uri></author><content type="html"><![CDATA[
    <p>&lt;p&gt;After pushing my site to &lt;strong&gt;GitHub&lt;/strong&gt; and verifying that it worked at &lt;a href=&quot;http://davidensinger.github.io/&quot;&gt;davidensinger.github.io&lt;/a&gt;, I then went to set up my custom domain name. The &lt;a href=&quot;https://help.github.com/articles/setting-up-a-custom-domain-with-pages&quot;&gt;documentation&lt;/a&gt; provided by GitHub is clear on the subject, but I still managed to forget about my subdomains. For more than eight hours, anyone who attempted to visit &lt;a href=&quot;http://davidensinger.com/&quot;&gt;davidensinger.com&lt;/a&gt; was served with a 404, which is &lt;a href=&quot;https://twitter.com/DavidEnsinger/status/316642135216619522&quot;&gt;rather embarrassing&lt;/a&gt; for one who makes a living as a developer.&lt;/p&gt;</p>

<p>&lt;p&gt;In the interest of helping others avoid the mistakes I made, here’s a guide to setting up the DNS for GitHub pages on &lt;a href=&quot;http://www.namecheap.com/?aff=32887&quot;&gt;Namecheap&lt;/a&gt;, my registrar of choice.&lt;/p&gt;</p>

<p>&lt;div class=&quot;yellow-box&quot;&gt;
  &lt;p&gt;&lt;strong&gt;Please Note:&lt;/strong&gt; This guide assumes that you’re using a top-level domain (TLD).&lt;/p&gt;
&lt;/div&gt;</p>

<p>&lt;h2&gt;Add a CNAME File to your Repo&lt;/h2&gt;</p>

<p>&lt;p&gt;Create a new file and put your domain name in it. Save it as CNAME.&lt;/p&gt;</p>

<p>&lt;pre&gt;&lt;code&gt;yourtlddomainname.com
&lt;/code&gt;&lt;/pre&gt;</p>

<p>&lt;h2&gt;Find your Host Records&lt;/h2&gt;</p>

<p>&lt;p&gt;&lt;img src=&quot;http://davidensinger.com/assets/img/posts/2013-03-27-namecheap-all-host-records.png&quot; alt=&quot;Image of All Host Records&quot; class=&quot;media-right img-border&quot; /&gt;&lt;/p&gt;</p>

<p>&lt;p&gt;Log into your Namecheap account, select the appropriate domain name, and then go to &lt;strong&gt;All Host Records&lt;/strong&gt;.&lt;/p&gt;</p>

<p>&lt;h2&gt;Set up the DNS&lt;/h2&gt;</p>

<p>&lt;ol&gt;
&lt;li&gt;Set the &lt;strong&gt;@&lt;/strong&gt; (used to denote the domain name for which you’re configuring the DNS) &lt;strong&gt;IP Address/URL&lt;/strong&gt; to &lt;code&gt;204.232.175.78&lt;/code&gt; and the &lt;strong&gt;Record Type&lt;/strong&gt; to &lt;code&gt;A (Address)&lt;/code&gt; with a &lt;strong&gt;TTL&lt;/strong&gt; (an acronym for &lt;strong&gt;Time To Live&lt;/strong&gt; that refers to the capability of the DNS servers to cache DNS records) of &lt;code&gt;1800&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Set the &lt;strong&gt;www&lt;/strong&gt; (the subdomain www) &lt;strong&gt;IP Address/URL&lt;/strong&gt; to &lt;code&gt;username.github.io&lt;/code&gt; and the &lt;strong&gt;Record Type&lt;/strong&gt; to &lt;code&gt;CNAME (Alias)&lt;/code&gt; with a &lt;strong&gt;TTL&lt;/strong&gt; of &lt;code&gt;1800&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;</p>

<p>&lt;p&gt;&lt;img src=&quot;http://davidensinger.com/assets/img/posts/2013-03-27-namecheap-dns-settings.png&quot; alt=&quot;Image of DNS settings&quot; class=&quot;media-center img-border&quot; /&gt;&lt;/p&gt;</p>

<p>&lt;p&gt;Save and then you’re all set! Please note, however that it may take some time for the changes to the DNS to propagate.&lt;/p&gt;</p>

<p>&lt;div class=&quot;gray-box&quot;&gt;
  &lt;p&gt;&lt;strong&gt;More Info:&lt;/strong&gt; Google has a pretty good &lt;a href=&quot;http://support.google.com/a/bin/answer.py?hl=en&amp;answer=48090&quot;&gt;Basic Guide to DNS&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;</p>

  ]]></content></entry></feed>